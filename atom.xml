<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Data4Fun</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-20T09:17:12.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Data4Fun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于echart实现动态加载微信云平台数据库的数据</title>
    <link href="http://yoursite.com/2018/09/20/%E5%9F%BA%E4%BA%8Eechart%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD%E5%BE%AE%E4%BF%A1%E4%BA%91%E5%B9%B3%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/2018/09/20/基于echart实现动态加载微信云平台数据库的数据/</id>
    <published>2018-09-20T06:10:36.000Z</published>
    <updated>2018-09-20T09:17:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>微信小程序的云开发平台提供了三个基础能力：数据库、存储和云函数。我们这次利用微信小程序的云平台数据库的数据，通过echart这个前端可视化框架，实现百度2016、2017年每个季度的营收数据展示。</p>
<p>微信的云数据库是JSON 数据库，顾名思义，数据库中的每条记录都是一个 JSON 格式的对象。每一张表可以看成一个 JSON 数组。这里吐槽一下csv导入功能，本想用 csv 文件中数据直接导入导数据库，但是微信默认每一列都是关键字，不能有重复的值，而且像 12.5 和 12 这样值都被认为是相同的值，所以只能老老实实用微信的编辑工具手动录入数据。记得一定要录入 _openid!</p>
<h3 id="关于数据的获取"><a href="#关于数据的获取" class="headerlink" title="关于数据的获取"></a>关于数据的获取</h3><p>微信提供了数据库的异步接口<br><img src="../images/image.png" alt="image"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">function () &#123;</div><div class="line">var that = this</div><div class="line">db.collection(&apos;todos&apos;)</div><div class="line">  .where(&#123;</div><div class="line">    company: &apos;baidu&apos;</div><div class="line">  &#125;)</div><div class="line">  .get(&#123;</div><div class="line">    success: function (res) &#123;</div><div class="line">                ...</div><div class="line">                &#125;</div><div class="line">       &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="关于数据的动态加载"><a href="#关于数据的动态加载" class="headerlink" title="关于数据的动态加载"></a>关于数据的动态加载</h3><p>echart 的官网给出的例子是静态数据的展示，如果要展示动态数据，需要使用懒加载的功能。在 onLoad 阶段再从数据库读入数据，然后初始化图表。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">getData: function () &#123;</div><div class="line">    var that = this</div><div class="line">    db.collection(&apos;todos&apos;)</div><div class="line">      .where(&#123;</div><div class="line">        company: &apos;baidu&apos;</div><div class="line">      &#125;)</div><div class="line">      .get(&#123;</div><div class="line">        success: function (res) &#123;</div><div class="line">          // res.data 是包含以上定义的两条记录的数组</div><div class="line">          var dic = &#123;&#125;;</div><div class="line">          var arr = [];</div><div class="line">          var data = &#123;&#125;;</div><div class="line">          var re = res.data;</div><div class="line">          for (var i = 0; i &lt; re.length; i++) &#123;</div><div class="line">            dic[re[i][&apos;season&apos;] + &apos;-&apos; + re[i][&apos;year&apos;]] = re[i][&apos;earning&apos;]</div><div class="line">          &#125;</div><div class="line">          console.log(dic);</div><div class="line">          for (var year of [&apos;2016&apos;, &apos;2017&apos;]) &#123;</div><div class="line">            var xAxis = [&apos;Q1&apos;, &apos;Q2&apos;, &apos;Q3&apos;, &apos;Q4&apos;]</div><div class="line">            for (var i = 0; i &lt; xAxis.length; i++) &#123;</div><div class="line">              var index = xAxis[i] + &apos;-&apos; + year</div><div class="line">              if (index in dic) &#123;</div><div class="line">                if (dic[index] == null) &#123;</div><div class="line">                  arr.push(null)</div><div class="line">                &#125; else &#123;</div><div class="line">                  arr.push(dic[index])</div><div class="line">                &#125;</div><div class="line">              &#125;</div><div class="line">              </div><div class="line">            &#125;</div><div class="line">            data[year] = arr;</div><div class="line">            arr = [];</div><div class="line">          &#125;</div><div class="line">          console.log(data);</div><div class="line">          that.data.line = data;</div><div class="line">          try &#123;</div><div class="line">            that.init_echarts();//初始化图表</div><div class="line">          &#125; catch (e) &#123;</div><div class="line">            console.log(e)</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;);</div><div class="line"></div><div class="line">  &#125;,</div><div class="line">  //初始化图表</div><div class="line">  init_echarts: function () &#123;</div><div class="line">    this.echartsComponnet.init((canvas, width, height) =&gt; &#123;</div><div class="line">      // 初始化图表</div><div class="line">      const chart = echarts.init(canvas, null, &#123;</div><div class="line">        width: width,</div><div class="line">        height: height</div><div class="line">      &#125;);</div><div class="line">      canvas.setChart(chart);</div><div class="line">      chart.setOption(this.getOption());</div><div class="line">      // 注意这里一定要返回 chart 实例，否则会影响事件处理等</div><div class="line">      return chart;</div><div class="line">    &#125;);</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<h3 id="最后的效果图"><a href="#最后的效果图" class="headerlink" title="最后的效果图"></a>最后的效果图</h3><p><img src="../images/image-re.png" alt="image"></p>
<h3 id="需要注意的问题"><a href="#需要注意的问题" class="headerlink" title="需要注意的问题"></a>需要注意的问题</h3><p>1.使用 echart 的时候需要修改app的css样式，不然展示不出图表。</p>
<p>2.关于数据的动态加载，有另一种方案，就是把读取数据的过程放在初始化函数中执行，然后把读到的数据放在一个全局变量中。这种方案有一个问题，echarts 的初始化函数和全局初始化函数同时执行，不分先后，不能实现读到数据。</p>
<p>3.在 coding 中会遇到 TypeError:xx  is not a function 的问题。这时要在函数一开时的地方使用var that = this;，然后使用that调用数据</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;微信小程序的云开发平台提供了三个基础能力：数据库、存储和云函数。我们这次利用微信小程序的云平台数据库的数据，通过echart这个前端可视化框架，实现百度2016、2017年每个季度的营收数据展示。&lt;/p&gt;
&lt;p&gt;微信的云数据库是JSON 数据库，顾名思义，数据库中的每条记录
    
    </summary>
    
      <category term="技术实践" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/"/>
    
    
      <category term="微信小程序" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="我" scheme="http://yoursite.com/tags/%E6%88%91/"/>
    
  </entry>
  
  <entry>
    <title>读《全栈市场人》的收获</title>
    <link href="http://yoursite.com/2017/03/21/%E8%AF%BB%E3%80%8A%E5%85%A8%E6%A0%88%E5%B8%82%E5%9C%BA%E4%BA%BA%E3%80%8B%E7%9A%84%E6%94%B6%E8%8E%B7/"/>
    <id>http://yoursite.com/2017/03/21/读《全栈市场人》的收获/</id>
    <published>2017-03-21T06:10:36.000Z</published>
    <updated>2017-03-21T06:13:36.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="初探互联网"><a href="#初探互联网" class="headerlink" title="初探互联网"></a>初探互联网</h3><p>介绍了一般互联网公司的职位和日常工作。虽然自己也在互联网公司工作，但让自己介绍所有工种的职能，估计自己也说不全。比如BD这个职位，以前身边的一个同事就是做这个职位的，有时坐班有时出差，偶尔会去一些大会做主持。看过这本书之后才知道BD的全称是Business Develop（商业拓展），工作的核心围绕着资源置换展开，以提高产品流量为目的。</p>
<p>对比传统行业，书中也做了一个有趣的类比，互联网公司就是一家餐厅，CEO是餐厅老板，产品人员是餐厅的设计师，他要根据客人要求、本地风土人情设计出合适的菜品，运营是餐厅的大堂经理，负责送餐和日常餐厅保洁，市场（或者说是营销）负责餐厅的宣传，会四处做做广告，而研发则是最终操刀的厨子。总之，研发+产品+运营+市场是一个互联网公司的4大主力职位</p>
<h3 id="技能养成"><a href="#技能养成" class="headerlink" title="技能养成"></a>技能养成</h3><p>文笔</p>
<ul>
<li>写文案前要明确目标</li>
<li>写需求的套路：1.页面的功能和要求；2.页面的跳转逻辑；3.数据的支撑</li>
<li>做事之前要有一个大纲，也要准备一个Plan B以备意外情况的发生</li>
</ul>
<p>技术</p>
<ul>
<li>修图、制作H5页面</li>
</ul>
<p>沟通</p>
<ul>
<li>情商高。平时就要注意维护，同事间、上游供货商、媒体渠道</li>
</ul>
<p>塑造个人品牌</p>
<ul>
<li>注意社交帐号的维护，知乎、微信（注意排版、字体小5号）、微博</li>
<li>注意自己经手项目的总结和复盘</li>
</ul>
<p>学习</p>
<ul>
<li>找灵感：TOPTS、梅花网</li>
<li>做市场，说穿了是做征服人的工作，所以了解传播效应、了解人的心理是本质的出发点。推荐《乌合之众》</li>
</ul>
<p>数据</p>
<ul>
<li>百度/google/腾讯统计</li>
</ul>
<p>案例</p>
<ul>
<li>百度关于“优衣库事件”的公关。&lt;寻找美好的 总能超越荒谬的&gt;</li>
</ul>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><blockquote>
<p>公关行为的本质试讲你想要传达的信息，经过包装处理，在通过你想要的渠道传递给你想要传递的你群，并让他们接受你的信息以及做出你期望的反应（提升好感、引导行为）</p>
<p>直播文化，不过把从前游戏打的帅的人背后总有一堆人站着围观的场景，路边树荫下下棋的大爷背后一堆人指点的场景被平台聚集和放大了。</p>
</blockquote>
<p>最近一直在想为什么陌陌的营收能突然有6倍的增长，这或许解答了我部分的疑惑吧。</p>
<p>Anyway，花了一周的时间读完了《全栈市场人》这本书，以上就是自己的收获吧，总体而言，还是一部不错的了解互联网市场岗位的入门书。最后吐槽一下，书的后几章每一个小节的安排有些随意，之间没有什么必然的联系，像是单独的文章硬生生的攒在一起；而且书中的配图质量以及配图和文件之间的关系也有些模糊。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;初探互联网&quot;&gt;&lt;a href=&quot;#初探互联网&quot; class=&quot;headerlink&quot; title=&quot;初探互联网&quot;&gt;&lt;/a&gt;初探互联网&lt;/h3&gt;&lt;p&gt;介绍了一般互联网公司的职位和日常工作。虽然自己也在互联网公司工作，但让自己介绍所有工种的职能，估计自己也说不全。比如
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="我" scheme="http://yoursite.com/tags/%E6%88%91/"/>
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
